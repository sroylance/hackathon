<?php
// @codingStandardsIgnoreFile

/** @var $block \Magento\Framework\App\Product\View */
?>

<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta charset="utf-8">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
    <script type="application/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/5.1.5/jsoneditor.min.css">
    <link rel="stylesheet" href="http://dcl.cimpress.io/0.current/dcl.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/5.1.5/jsoneditor.min.js"></script> 
    <script type="application/javascript" src="http://dcl.cimpress.io/0.current/dcl.min.js" charset="utf-8"></script>
    <style>
        body, html {
            height: 100%;
            margin: 0;
        }

        #designer-client {
            height: 100%;
            display: flex;
            flex-direction: column;
        }

        .main-content {
            flex: 1;
            display: flex;
            min-height: 0;
        }

        .left-column {
            display: flex;
            flex-direction: column;
            z-index: 1;
            border-right: 1px solid #bbbbbb;
            background: #ffffff;
            flex: 0 0 350px;
        }

        .right-column {
            background: #efefef;
            flex: 1 1;
            display: flex;
            overflow: auto;
        }

        .top-view {
            text-align: center;
            background-color: white;
            z-index: 2;
            -webkit-box-shadow: 0 0 10px 0 rgba(0,0,0,0.5);
            -moz-box-shadow: 0 0 10px 0 rgba(0,0,0,0.5);
            box-shadow: 0 0 10px 0 rgba(0,0,0,0.5);
            padding-bottom: 10px;
        }

        .upload-list-container {
            flex: 1 1;
            overflow: auto;
        }

        .dcl-upload-list.panel-group {
            margin: 0;
        }

        .dcl-upload-button button {
            margin-top: 15px;
            font-weight: 700;
            color: #ffffff;
            background-color: #f16f01;
            border-color: #EEA236;
        }

        .dcl-upload-button button:hover, .dcl-upload-button button:focus {
            color: #ffffff;
            background-color: #ED5901;
            border-color: #D85F0D;
        }

        #canvases {
            flex: 1 1;
        }

        #upload-form {
            position: absolute;
            opacity: 0;
            z-index: -10;
        }

        .action-buttons {
            width: 130px;
            margin: auto;
            padding: 0 0 10px 0;
        }

        .action-buttons > .dcl-zoom {
            text-align: right;
            float: left;
        }

        .action-buttons > .dcl-document-rotate {
            float: left;
            text-align: left;
            margin-left: 3px;
        }

        .dcl-pdf-button {
            position: fixed;
            bottom: 10px;
            right: 10px;
        }

        .fa-file-pdf-o {
            margin-right: 6px;
        }

        .left-column .upload-file-div {
            margin-top: 15px;
        }

        .left-column hr {
            margin: 20px 0;
        }

        .left-column .dcl-add-text,
        .left-column .dcl-add-shapes {
            margin: 20px;
        }

        .dcl-add-text button {
            margin: 4px;
        }

        .scrollbox {
            flex: inherit;
        }

    </style>
</head>
<body>
    <div class="dcl dcl-container flexrows">
        <div class="flexlanes dcl-container__editor">
            <div class="content-panel__tabs">
                <a href="#" class="tab-item__link js-tab is-active" data-tab="images">

                    <svg class="tab-item__link__icon tab-item__link__icon--images" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="25" height="25">
                        <path class="tab-item__link__icon--images__path-1" d="M23,20.14H1l5.64-15,7,8.81,3.44-2.58Z" />
                        <path class="tab-item__link__icon--images__path-2" d="M2.34,19.21H21.26L16.9,12.67,13.52,15.2,6.93,7Z" />
                        <circle class="tab-item__link__icon--images__path-3" cx="19.5" cy="7" r="2.65" />
                    </svg>

                    <span class="tab-item__link__description">Images</span>
                </a>
                <a href="#" class="tab-item__link js-tab" data-tab="shapes">

                    <svg class="tab-item__link__icon tab-item__link__icon--shapes" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24" width="25" height="25">
                        <circle class="tab-item__link__icon--shapes__path-1" cx="10.5" cy="18.5" r="4" />
                        <rect class="tab-item__link__icon--shapes__path-2" width="8" height="8" x="14.5" y="4.5" />
                        <polygon class="tab-item__link__icon--shapes__path-3" points="2 11,6,2 11,11" />
                    </svg>

                    <span class="tab-item__description">Shapes</span>
                </a>
                <a href="#" class="tab-item__link js-tab" data-tab="text">

                    <svg class="tab-item__link__icon tab-item__link__icon--text" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="25" height="25">
                        <path class="tab-item__link__icon--text__path-1" d="M16.59,23H7.41V20.74l2.4-.17L10,20.38V3.45H6l-0.19.2L5.31,6.82H2.66V1H21.34V6.82H18.68L18.21,3.64,18,3.45H14V20.38l0.22,0.18,2.41,0.17V23Z" />
                        <path class="tab-item__link__icon--text__path-2" d="M8.42,22h7.16V21.68l-1.81-.13L13,20.85V2.44h5.51l0.7,0.75,0.39,2.63h0.79V2H3.67v3.8H4.44l0.4-2.63,0.7-.75H11V20.85l-0.84.7-1.79.13V22Z" />
                    </svg>

                    <span class="tab-item__description">Text</span>
                </a>
                <div class="tab-item__indicator"></div>
            </div>
            <div class="flexrows content-panel js-content-panels">
                <div class="content-panel__images js-content-panel js-content-panel-images is-active">
                    <div class="button-bar">
                        <form id="upload-form" class="hide-from-viewport">
                            <input type="file" class="upload-input" multiple>
                        </form>
                        <div class="upload-button-container"></div>
                    </div>
                    <div class="content-panel__content scrollable-area scrollbox">
                        <h1 class="dcl-h1">All images</h1>
                        <div class="images-grid js-grid">
                            <div class="upload-list-container"></div>
                        </div>
                    </div>
                </div>

                <div class="content-panel__shapes js-content-panel js-content-panel-shapes">
                    <div class="add-shapes-container"></div>
                </div>

                <div class="content-panel__text js-content-panel js-content-panel-text">
                    <div class="add-text-container"></div>
                    <div class="content-panel__content scrollable-area scrollbox edit-text-container">
                        <h1 class="dcl-h1">All text</h1>
                    </div>
                </div>
            </div>
            <div class="workarea flexrows">
                <div class="workarea__action-bar">
                    <div class="action-buttons"></div>
                </div>
                <div class="workarea__canvases scrollbox" id="canvases">
                </div>
            </div>
        </div>
        <div class="workarea__footer-bar">
            <div class="pdf-button-container"> </div>
        </div>
    </div>

<script type="application/javascript">
        var configure = 'False' == "True";
        var mergeRecursive = function(obj1, obj2) {
            for (var p in obj2) {
                if ( obj2.hasOwnProperty(p) && typeof obj1[p] !== "undefined" ) {
                    mergeRecursive(obj1[p], obj2[p]);
                } else {
                    obj1[p] = obj2[p];
                }
            }
        }

        var addAuthTokens = function(config) {
            if (!config) {
                return;
            }
            var authTokens = { uds: {tokenProperty: 'authToken', tokenValue: 'Basic aW50ZXJuYWwtdGVzdC1tZXJjaGFudDppYW1zdXBlcnRlc3Q='}, surfaceSpecifications: {tokenProperty: 'authToken', tokenValue: 'Basic aW50ZXJuYWwtdGVzdC1tZXJjaGFudDppYW1zdXBlcnRlc3Q='}, scene: {tokenProperty: 'authToken', tokenValue: 'Basic aW50ZXJuYWwtdGVzdC1tZXJjaGFudDppYW1zdXBlcnRlc3Q='}, preflight: {tokenProperty: 'authToken', tokenValue: 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYW1lIjoiSmFtZXMgQW5kZXJzb24iLCJlbWFpbCI6ImphYW5kZXJzb25AY2ltcHJlc3MuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImlzcyI6Imh0dHBzOi8vY2ltcHJlc3MuYXV0aDAuY29tLyIsInN1YiI6ImFkZnN8amFhbmRlcnNvbkBjaW1wcmVzcy5jb20iLCJhdWQiOiJVd0d3SHMyWHRKMHYwWlptVlFscXY4YVNuZHluUlpOeSIsImV4cCI6MTQ2NzQxMzkwNiwiaWF0IjoxNDY3Mzc3OTA2LCJhenAiOiJRa3hPdk56NGZXUkZUNnZjcTc5eWxjSXVvbEZ6MmN3TiJ9.OD8yktnC2x8xQXRlv24S5VIeBP7zzlV422cZpr4pB9I'}, prepress: {tokenProperty: 'authToken', tokenValue: 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYW1lIjoiSmFtZXMgQW5kZXJzb24iLCJlbWFpbCI6ImphYW5kZXJzb25AY2ltcHJlc3MuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImNvbm5lY3Rpb24iOiJDaW1wcmVzc0FERlMiLCJpc3MiOiJodHRwczovL2NpbXByZXNzLmF1dGgwLmNvbS8iLCJzdWIiOiJhZGZzfGphYW5kZXJzb25AY2ltcHJlc3MuY29tIiwiYXVkIjoiZk5zS2hOeklhdWVUaExGUFg4THVoM3M2cnU0eXFlNVIiLCJleHAiOjE0Njc0MTM5MDYsImlhdCI6MTQ2NzM3NzkwNiwiYXpwIjoiUWt4T3ZOejRmV1JGVDZ2Y3E3OXlsY0l1b2xGejJjd04ifQ.hfrPI1rYeoFH4yWEZNWT4WNbFHDm0lqKKTLmWgLRAY0'}, crispify: {tokenProperty: 'authToken', tokenValue: 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYW1lIjoiSmFtZXMgQW5kZXJzb24iLCJlbWFpbCI6ImphYW5kZXJzb25AY2ltcHJlc3MuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImlzcyI6Imh0dHBzOi8vY2ltcHJlc3MuYXV0aDAuY29tLyIsInN1YiI6ImFkZnN8amFhbmRlcnNvbkBjaW1wcmVzcy5jb20iLCJhdWQiOiJwbDNxNUo0a2hhTFRhUzdya3Y3M0k4N1RyVGxWN040SSIsImV4cCI6MTQ2NzM4MTUwNiwiaWF0IjoxNDY3Mzc3OTA2LCJhenAiOiJRa3hPdk56NGZXUkZUNnZjcTc5eWxjSXVvbEZ6MmN3TiJ9.i4xtg96LuKUYbhj4a-5joZ4N2xux5tHMWKyS0SjDHu4'}, cleanimage: {tokenProperty: 'cleanAuthToken', tokenValue: 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYW1lIjoiSmFtZXMgQW5kZXJzb24iLCJlbWFpbCI6ImphYW5kZXJzb25AY2ltcHJlc3MuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImlzcyI6Imh0dHBzOi8vY2ltcHJlc3MuYXV0aDAuY29tLyIsInN1YiI6ImFkZnN8amFhbmRlcnNvbkBjaW1wcmVzcy5jb20iLCJhdWQiOiJNMVdUbHdFaU9IWjB4RklybXp0ZHRsVU00N3F2cXBCQyIsImV4cCI6MTQ2NzQxMzkwNiwiaWF0IjoxNDY3Mzc3OTA2LCJhenAiOiJRa3hPdk56NGZXUkZUNnZjcTc5eWxjSXVvbEZ6MmN3TiJ9.VSylef12eqpxd70PtXOfK-OXAnPtsE-CdXybPO9X0t0'}, digitization: {tokenProperty: 'digitizeAuthToken', tokenValue: 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYW1lIjoiSmFtZXMgQW5kZXJzb24iLCJlbWFpbCI6ImphYW5kZXJzb25AY2ltcHJlc3MuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImlzcyI6Imh0dHBzOi8vY2ltcHJlc3MuYXV0aDAuY29tLyIsInN1YiI6ImFkZnN8amFhbmRlcnNvbkBjaW1wcmVzcy5jb20iLCJhdWQiOiJrdDkxZEdGOG44dDNMblRtaFdBbVRjVU1jY1Z0S3JxciIsImV4cCI6MTQ2NzQxMzkwNiwiaWF0IjoxNDY3Mzc3OTA2LCJhenAiOiJRa3hPdk56NGZXUkZUNnZjcTc5eWxjSXVvbEZ6MmN3TiJ9.WNszI29hucExNd1dBSYaGDVziYnso131VdQdjZzfKzM'} };

            for (service in authTokens) {
                // I know this is a terrible hack but we are redoing this, and we currently have no way of having 2 clients for the same service, and this is just easier than expanding even further
                // already modified the token objects to have more than one property, but to totally change a token to have the ability to run more than one task in the get token area seems more complicated
                // than worth for the current work around, that is going to be replaced...

                const tokenProperty = authTokens[service].tokenProperty;
                const tokenValue =  authTokens[service].tokenValue;

                if (['cleanimage', 'digitization'].indexOf(service) > -1) { service = 'embroidery'; };

                config[service] &&
                  !config[service][tokenProperty] &&
                  (config[service][tokenProperty] = tokenValue);
            }
        }

        var config = {
            core: {
                items: {
                    text: {
                        rotatable: true,
                        minWidth: 15
                    },
                    image: {
                        rotatable: true,
                        maintainProportions: true,
                        minWidth: 8,
                        minHeight: 8
                    },
                    shape: {
                        defaults: {
                            Rectangle: {
                                strokeWidth: 1,
                                strokeColor: '#000000',
                                fillColor: '#FFFFFF'
                            },
                            Ellipse: {
                                strokeWidth: 1,
                                strokeColor: '#000000',
                                fillColor: '#FFFFFF'
                            },
                            Line: {
                                strokeWidth: 1,
                                strokeColor: '#000000'
                            }
                        }
                    }
                }
            },
            services: {
                clients: {
                    upload: {
                        form: '#upload-form',
                        dropZone: 'body',
                        merchantId: 'default'
                    },

                    uds: {
                        merchantId: 'internal-test-merchant'
                    },

                    prepress: {},

                    preflight: {},

                    surfaceSpecifications: {},

                    crispify: {},

                    embroidery: {},

                    scene: {}
                }
            },

            ui: {
                canvas: {
                    useProductScenes: true
                },

                zoomStrategy: {
                    initialHeight: .45
                },

                widgets: {
                    zoom: {
                        enabled: true,
                        containerElement: '.action-buttons'
                    },
                    addText: {
                        enabled: true,
                        containerElement: '.add-text-container'
                    },
                    editText: {
                        enabled: true,
                        containerElement: '.edit-text-container'
                    },
                    generatePdf: {
                        enabled: true,
                        containerElement: '.pdf-button-container'
                    },
                    addShape: {
                        enabled: true,
                        containerElement: '.add-shapes-container'
                    },
                    uploadList: {
                        enabled: true,
                        containerElement: '.upload-list-container'
                    },
                    uploadButton: {
                        enabled: true,
                        containerElement: '.upload-button-container',
                        input: '.upload-input'
                    },
                    contextualToolbar: {
                        enabled: true
                    }
                }
            },

            localization: {
                language: 'en',
            }
        };
        var initTabs = function () {
            var $tabs = $('.js-tab');
            var $contentPanels = $('.js-content-panel');
            var ACTIVE_CLASS = 'is-active';

            $tabs.on('click', function(e) {
                e.preventDefault();

                var $currentTab = $(this);
                var currentTabName = $currentTab.data('tab');

                $tabs.removeClass(ACTIVE_CLASS);
                $currentTab.addClass(ACTIVE_CLASS);

                $contentPanels.removeClass(ACTIVE_CLASS);
                $('.js-content-panel-' + currentTabName).addClass(ACTIVE_CLASS);
            });
        };

        initTabs();

        addAuthTokens(config.services.clients);

        if (configure) {
            var container = document.getElementById("jsoneditor");
            var options = {modes: ["tree", "code", "form", "text", "view"]};
            var editor = new JSONEditor(container, options);
            editor.set(config);
            document.getElementById("designButton").addEventListener("click", function() {
                document.getElementById("jsoneditor-wrapper").setAttribute("class", "hidden");
                var inputConfig = editor.get();
                dcl.start({ configuration: inputConfig, mcpSku: 'VIP-45215' });
            });
        } else {
            dcl.start({ configuration: config, mcpSku: 'VIP-45215' });
        }
    </script>
</body>
</html>
